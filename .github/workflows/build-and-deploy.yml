name: Build and Deploy

on:
  push:
    branches: [internal]
  workflow_dispatch:
    inputs:
      skip_docker_build:
        description: 'Skip Docker build/publish'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: docker.io
  DOCKER_ORG: globalspecllc
  IMAGE_NAME: better-chatbot

jobs:
  set-versions:
    name: Set Versions
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get_version.outputs.app_version }}
      docker_tag: ${{ steps.get_version.outputs.docker_tag }}
      git_hash: ${{ steps.get_version.outputs.git_hash }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: |
          # Generate version based on date, commit count and hash
          CURRENT_COMMIT_DATE=$(git show -s --format=%cd --date=format:'%Y%m%d' HEAD)
          COMMIT_COUNT=$(git rev-list --count HEAD)
          CURRENT_COMMIT_HASH=$(git show -s --format=%h HEAD)
          APP_VERSION="${CURRENT_COMMIT_DATE}.${COMMIT_COUNT}.${CURRENT_COMMIT_HASH}"

          # Docker tag format
          DOCKER_TAG="${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:${APP_VERSION}"

          echo "app_version=${APP_VERSION}" >> $GITHUB_OUTPUT
          echo "docker_tag=${DOCKER_TAG}" >> $GITHUB_OUTPUT
          echo "git_hash=${CURRENT_COMMIT_HASH}" >> $GITHUB_OUTPUT

          echo "Generated version: ${APP_VERSION}"
          echo "Docker tag: ${DOCKER_TAG}"

  build-and-publish:
    runs-on: ubuntu-latest
    needs: set-versions
    if: ${{ !inputs.skip_docker_build }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:${{ needs.set-versions.outputs.app_version }}
            ${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            APP_VERSION=${{ needs.set-versions.outputs.app_version }}
            GIT_HASH=${{ needs.set-versions.outputs.git_hash }}
            DOCKER_BUILD=1
          cache-from: |
            type=gha
            type=registry,ref=${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:cache
          cache-to: |
            type=gha,mode=max
            type=registry,ref=${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:cache,mode=max

  update-helm-chart:
    needs: [set-versions, build-and-publish]
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_docker_build }}
    steps:
      - name: Checkout Helm Chart Repository
        uses: actions/checkout@v4
        with:
          repository: globalspec/cnai-chart
          token: ${{ secrets.GH_ACTIONS_READ_WRITE_TOKEN }}
          path: helm-chart

      - name: Update Helm Chart Version 
        env:
          GH_TOKEN: ${{ secrets.GH_ACTIONS_READ_WRITE_TOKEN }}
        run: |
          cd helm-chart/
          # Install yq for YAML processing
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

          # Update only the better-chatbot section, preserving all other sections
          yq eval '.better-chatbot.image.tag = "${{ needs.set-versions.outputs.app_version }}"' -i dev-versions.yaml

          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Commit and push changes
          git add dev-versions.yaml
          git commit -m "build: set version ${{ needs.set-versions.outputs.app_version }} for comparenetworks-ai-agent-ui-chart"
          git push

      - name: Summary
        run: |
          echo "## ðŸŽ‰ Build and Deploy Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ inputs.skip_docker_build }}" != "true" ]]; then
            echo "âœ… Docker image built and published" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Docker Image:**" >> $GITHUB_STEP_SUMMARY
            echo "${{ env.REGISTRY }}/${{ env.DOCKER_ORG }}/${{ env.IMAGE_NAME }}:${{ needs.set-versions.outputs.app_version }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸš€ Ready for deployment!" >> $GITHUB_STEP_SUMMARY